events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # ==========================================
    # RATE LIMITING CONFIGURATION
    # ==========================================
    
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;    
    limit_req_zone $binary_remote_addr zone=strict_limit:10m rate=10r/m;    
    limit_req_zone $binary_remote_addr zone=auth_limit:5m rate=5r/m;    
    limit_req_zone $binary_remote_addr zone=upload_limit:5m rate=20r/m;    
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;    
    limit_req_status 429;
    limit_conn_status 429;

    map $status $rate_limit_message {
        429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please try again later.", "status": 429}';
    }
    
    upstream book_service {
        server book-service:3000;
    }
    
    server {
        listen 80;
        server_name localhost;

        limit_conn conn_limit 10;
        error_page 429 @rate_limit_error;
        location @rate_limit_error {
            default_type application/json;
            return 429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please try again later.", "status": 429, "retry_after": "$limit_req_status"}';
        }

        # ==========================================
        # SWAGGER DOCUMENTATION
        # ==========================================
        location /api/docs {
            proxy_pass http://book_service/api/docs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            proxy_hide_header X-Frame-Options;
        }

        location ~ ^/api/docs-json {
            proxy_pass http://book_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header Content-Type application/json;
        }
        
        location ~ ^/api/v1/auth {
            limit_req zone=auth_limit burst=3 nodelay;
            rewrite ^/api/v1/auth/(.*)$ /api/v1/auth/$1 break;
            proxy_pass http://book_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            add_header X-RateLimit-Limit "5" always;
            add_header X-RateLimit-Remaining $limit_req_status always;
        }

        location /api {
            limit_req zone=general_limit burst=20 nodelay;
            rewrite ^/api/(.*)$ /api/$1 break;
            proxy_pass http://book_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            
            # Rate limit headers
            add_header X-RateLimit-Limit "100" always;
            add_header X-RateLimit-Remaining $limit_req_status always;
        }


        # ==========================================
        # DEFAULT 404
        # ==========================================
        location / {
            return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }
    }
}