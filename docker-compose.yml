services:
  # API Gateway (Nginx)
  nginx:
    image: nginx:alpine
    container_name: api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - book-service
    restart: unless-stopped
    networks:
      - microservices-network

  # Book Service
  book-service:
    build:
      context: ./book-service
      dockerfile: Dockerfile
      target: development
    container_name: book-service
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-book-service}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS:-10}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
    volumes:
      - ./book-service:/app
      - /app/node_modules
      - book-service-cache:/app/.cache
    restart: unless-stopped
    networks:
      - microservices-network
    command: npm run start:dev

networks:
  microservices-network:
    driver: bridge
    name: microservices-network

volumes:
  book-service-cache:
    driver: local
  nginx-logs:
    driver: local
